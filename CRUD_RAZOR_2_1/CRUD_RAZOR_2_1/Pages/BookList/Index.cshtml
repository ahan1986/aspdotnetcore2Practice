@page
@model IndexModel
@{
}
<h2>Hello from razor page!</h2>
<br />
<h3>@Model.someData</h3>
<br />

@if(Model.Message != null)
{
    <div contenteditable="alert alert-info alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="close">
            <span aria-hidden="true">&times;</span>
        </button>
        @Model.Message
    </div>
}


@*creating a button here to store books in the database which will be created soon. The below is an anchor tag that uses bootstraps btn class to make it look like a button. The tag helper asp-page links where the page or the link/button will go to. So it goes to /BookList/Create*@
<a asp-page="Create" class="btn btn-primary">Create New Book</a>

<br />

@if (Model.Books.Count() > 0)
{
<table class="table">
    <tr>
        @*the below 3 tags are for headers for this table which is always followed by a foreach to display the data in each column of the table*@
        <th>
            @Html.DisplayNameFor(m => m.Books.FirstOrDefault().Name)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.Books.FirstOrDefault().ISBN)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.Books.FirstOrDefault().Author)
        </th>
    </tr>
    @foreach (var item in Model.Books)
    {
        <tr>
            <th>
                @Html.DisplayFor(m => item.Name)
            </th>
        
            <th>
                @Html.DisplayFor(m => item.ISBN)
            </th>
            <th>
                @Html.DisplayFor(m => item.Author)
            </th>
        </tr>
    }
</table>
}
else
{
    <div> No Books in Databse. </div>
}